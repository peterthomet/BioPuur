@model ProductReviewsModel

@using Nop.Core

@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(Model.ProductName);
    Html.AddTitleParts(T("PageTitle.ProductReviews").Text);
    //page class
    Html.AppendPageCssClassParts("html-product-reviews-page");
}
<div class="page product-reviews-page">
    <div class="page-title">
        <h1>@T("Reviews.ProductReviewsFor") <a href="@Url.RouteUrl("Product", new { SeName = Model.ProductSeName })">@Model.ProductName</a></h1>
    </div>
    <div class="page-body">
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductReviewsPageTop, additionalData = Model })
        @if (Model.AddProductReview.SuccessfullyAdded)
        {
            <div class="alert alert-success result">
                @Model.AddProductReview.Result
            </div>
        }
        else if (!Model.AddProductReview.CanAddNewReview)
        {
            <div class="result review-already-added">
                @T("Reviews.AlreadyAddedProductReviews")
            </div>
        }
        else
        {
            <div class="write-review" id="review-form">
                <div class="title">
                    <strong>@T("Reviews.Write")</strong>
                </div>
                <form asp-route="ProductReviews" method="post">
                    <div asp-validation-summary="ModelOnly" class="message-error alert alert-danger"></div>
                    <div class="fieldset">
                        <div class="form-fields">
                            <div class="form-group">
                                <div class="row">
                                    <label class="col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4 col-form-label" asp-for="AddProductReview.Title" asp-postfix=":"></label>
                                    <div class="col-12 col-sm-12 col-md-5 col-lg-5 col-xl-5">
                                        <input asp-for="AddProductReview.Title" class="review-title form-control" asp-disabled="@(!Model.AddProductReview.CanCurrentCustomerLeaveReview)" />
                                    </div>
                                    <div class="col-12 col-sm-12 col-md-3 col-lg-3 col-xl-3">
                                        <nop-required />
                                    </div>
                                    <div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 text-center">
                                        <span asp-validation-for="AddProductReview.Title"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="row">
                                    <label class="col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4 col-form-label" asp-for="AddProductReview.ReviewText" asp-postfix=":"></label>
                                    <div class="col-12 col-sm-12 col-md-5 col-lg-5 col-xl-5">
                                        <textarea asp-for="AddProductReview.ReviewText" rows="5" class="review-text form-control" asp-disabled="@(!Model.AddProductReview.CanCurrentCustomerLeaveReview)"></textarea>
                                    </div>
                                    <div class="col-12 col-sm-12 col-md-3 col-lg-3 col-xl-3">
                                        <nop-required />
                                    </div>
                                    <div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 text-center">
                                        <span asp-validation-for="AddProductReview.ReviewText"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group review-rating">
                                <div class="row">
                                    <label class="col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4 col-form-label" asp-for="AddProductReview.Rating" asp-postfix=":"></label>
                                    <ul class="col-12 col-sm-12 col-md-5 col-lg-5 col-xl-5">
                                        <li class="label first d-inline-block">@T("Reviews.Fields.Rating.Bad")</li>
                                        <li class="rating-options d-inline-block">
                                            <div class="custom-control custom-radio d-inline-block">
                                                <input asp-for="AddProductReview.Rating" class="custom-control-input" value="1" type="radio" id="addproductrating_1" aria-label="@T("Reviews.Fields.Rating.Bad")" />
                                                <label class="custom-control-label" for="addproductrating_1"></label>
                                            </div>
                                            <div class="custom-control custom-radio d-inline-block">
                                                <input asp-for="AddProductReview.Rating" class="custom-control-input" value="2" type="radio" id="addproductrating_2" aria-label="@T("Reviews.Fields.Rating.NotGood")" />
                                                <label class="custom-control-label" for="addproductrating_2"></label>
                                            </div>
                                            <div class="custom-control custom-radio d-inline-block">
                                                <input asp-for="AddProductReview.Rating" class="custom-control-input" value="3" type="radio" id="addproductrating_3" aria-label="@T("Reviews.Fields.Rating.NotBadNotExcellent")" />
                                                <label class="custom-control-label" for="addproductrating_3"></label>
                                            </div>
                                            <div class="custom-control custom-radio d-inline-block">
                                                <input asp-for="AddProductReview.Rating" class="custom-control-input" value="4" type="radio" id="addproductrating_4" aria-label="@T("Reviews.Fields.Rating.Good")" />
                                                <label class="custom-control-label" for="addproductrating_4"></label>
                                            </div>
                                            <div class="custom-control custom-radio d-inline-block">
                                                <input asp-for="AddProductReview.Rating" class="custom-control-input" value="5" type="radio" id="addproductrating_5" aria-label="@T("Reviews.Fields.Rating.Excellent")" />
                                                <label class="custom-control-label" for="addproductrating_5"></label>
                                            </div>
                                        </li>
                                        <li class="label last d-inline-block">@T("Reviews.Fields.Rating.Excellent")</li>
                                    </ul>
                                </div>
                            </div>
                            @if (Model.ReviewTypeList.Count > 0)
                            {
                                foreach (var additionalReview in Model.AddAdditionalProductReviewList.OrderBy(ob => ob.DisplayOrder).ToList())
                                {
                                    var curAdditionalReview = Model.AddAdditionalProductReviewList.IndexOf(additionalReview);
                                    <div class="review-rating">
                                        <div class="row">
                                            <div class="name-description col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4 col-form-label">
                                                <div class="tooltip">
                                                    <label>@Html.Raw(additionalReview.Name):</label>
                                                    <span class="tooltiptext">@Html.Raw(additionalReview.Description)</span>
                                                </div>
                                            </div>
                                            <ul class="rating-wrapper col-12 col-sm-12 col-md-5 col-lg-5 col-xl-5">
                                                <li class="label first d-inline-block">@T("Reviews.Fields.Rating.Bad")</li>
                                                <li class="rating-options d-inline-block">
                                                    <input asp-for="@Model.AddAdditionalProductReviewList[curAdditionalReview].ReviewTypeId" value="@(additionalReview.ReviewTypeId)" type="hidden" />
                                                    <input asp-for="@Model.AddAdditionalProductReviewList[curAdditionalReview].Name" value="@(additionalReview.Name)" type="hidden" />
                                                    <input asp-for="@Model.AddAdditionalProductReviewList[curAdditionalReview].Description" value="@(additionalReview.Description)" type="hidden" />
                                                    <input asp-for="@Model.AddAdditionalProductReviewList[curAdditionalReview].DisplayOrder" value="@(additionalReview.DisplayOrder)" type="hidden" />
                                                    <input asp-for="@Model.AddAdditionalProductReviewList[curAdditionalReview].IsRequired" value="@(additionalReview.IsRequired)" type="hidden" />

                                                    <div class="custom-control custom-radio d-inline-block">
                                                        <input class="custom-control-input" asp-for="@Model.AddAdditionalProductReviewList[curAdditionalReview].Rating" value="0" type="radio" id="addproductratingext_0_@(additionalReview.ReviewTypeId)" style="display: none;" />
                                                        <label class="custom-control-label" for="addproductratingext_0_@(additionalReview.ReviewTypeId)"></label>
                                                    </div>
                                                    <div class="custom-control custom-radio d-inline-block">
                                                        <input class="custom-control-input" asp-for="@Model.AddAdditionalProductReviewList[curAdditionalReview].Rating" value="1" type="radio" id="addproductratingext_1_@(additionalReview.ReviewTypeId)" />
                                                        <label class="custom-control-label" for="addproductratingext_1_@(additionalReview.ReviewTypeId)"></label>
                                                    </div>
                                                    <div class="custom-control custom-radio d-inline-block">
                                                        <input class="custom-control-input" asp-for="@Model.AddAdditionalProductReviewList[curAdditionalReview].Rating" value="2" type="radio" id="addproductratingext_2_@(additionalReview.ReviewTypeId)" />
                                                        <label class="custom-control-label" for="addproductratingext_2_@(additionalReview.ReviewTypeId)"></label>
                                                    </div>
                                                    <div class="custom-control custom-radio d-inline-block">
                                                        <input class="custom-control-input" asp-for="@Model.AddAdditionalProductReviewList[curAdditionalReview].Rating" value="3" type="radio" id="addproductratingext_3_@(additionalReview.ReviewTypeId)" />
                                                        <label class="custom-control-label" for="addproductratingext_3_@(additionalReview.ReviewTypeId)"></label>
                                                    </div>
                                                    <div class="custom-control custom-radio d-inline-block">
                                                        <input class="custom-control-input" asp-for="@Model.AddAdditionalProductReviewList[curAdditionalReview].Rating" value="4" type="radio" id="addproductratingext_4_@(additionalReview.ReviewTypeId)" />
                                                        <label class="custom-control-label" for="addproductratingext_4_@(additionalReview.ReviewTypeId)"></label>
                                                    </div>
                                                    <div class="custom-control custom-radio d-inline-block">
                                                        <input class="custom-control-input" asp-for="@Model.AddAdditionalProductReviewList[curAdditionalReview].Rating" value="5" type="radio" id="addproductratingext_5_@(additionalReview.ReviewTypeId)" />
                                                         <label class="custom-control-label" for="addproductratingext_5_@(additionalReview.ReviewTypeId)"></label>
                                                    </div>
                                                </li>
                                                <li class="label last d-inline-block">@T("Reviews.Fields.Rating.Excellent")</li>
                                            </ul>
                                        </div>
                                    </div>
                                }
                            }
                            @if (Model.AddProductReview.DisplayCaptcha)
                            {
                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-12 col-sm-8 offset-md-4 offset-lg-4 offset-xl-4">
                                            <nop-captcha class="g-recaptcha" />
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="buttons">
                        <button type="submit" name="add-review" class="button-1 btn btn-primary write-product-review-button">@T("Reviews.SubmitButton")</button>
                    </div>
                </form>
            </div>
        }
        @if (Model.Items.Count > 0)
        {
            <div class="product-review-list">
                <div class="row">
                    <div class="title col-12 co-sm-12 col-md-12 col-lg-12 col-xl-12">
                        <strong>@T("Reviews.ExistingReviews")</strong>
                    </div>
                    @foreach (var review in Model.Items)
                    {
                        var ratingPercent = review.Rating * 20;
                        <div class="product-review-item  col-12 co-sm-12 col-md-12 col-lg-12 col-xl-12">
                            <div class="review-item-head">
                                <div class="review-title">
                                    <strong>@review.Title</strong>
                                </div>
                                <div class="product-review-box">
                                    <div class="rating">
                                        <div style="width: @(ratingPercent)%">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="review-content">
                                <div class="review-text title-avatar">
                                    @if (!string.IsNullOrEmpty(review.CustomerAvatarUrl))
                                    {
                                        <div class="avatar">
                                            @if (review.AllowViewingProfiles)
                                            {
                                                <a href="@Url.RouteUrl("CustomerProfile", new { id = review.CustomerId })" class="avatar-img-link">
                                                    <img src="@(review.CustomerAvatarUrl)" class="avatar-img" alt="Avatar" />
                                                </a>
                                            }
                                            else
                                            {
                                                <img src="@(review.CustomerAvatarUrl)" class="avatar-img" alt="Avatar" />
                                            }
                                        </div>
                                    }
                        </div>
                        <div class="text-body">
                            <div class="review-text">
                                @Html.Raw(Nop.Core.Html.HtmlHelper.FormatText(review.ReviewText, false, true, false, false, false, false))
                            </div>
                            @foreach (var reviewType in review.AdditionalProductReviewList.Where(x => x.Rating > 0 && x.VisibleToAllCustomers))
                            {
                                var ratingExtPercent = reviewType.Rating * 20;
                                <div class="review-type-rating-ext">
                                    <div class="review-title">
                                        <i>@reviewType.Name</i>
                                    </div>
                                    <div class="product-review-box">
                                        <div class="rating">
                                            <div style="width: @(ratingExtPercent)%">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            <div class="review-info">
                                <span class="user">
                                    <label>@T("Reviews.From"):</label>
                                    @if (review.AllowViewingProfiles)
                                    {
                                        <a href="@Url.RouteUrl("CustomerProfile", new { id = review.CustomerId })">@(review.CustomerName)</a>
                                    }
                                    else
                                    {
                                        <span>@review.CustomerName</span>
                                    }
                                </span>
                                <span class="separator">|</span>
                                <span class="date">
                                    <label>@T("Reviews.Date"):</label>
                                    <span>@review.WrittenOnStr</span>
                                </span>
                            </div>
                            @await Html.PartialAsync("_ProductReviewHelpfulness", review.Helpfulness)
                            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductReviewsPageInsideReview, additionalData = review })
                            @if (!string.IsNullOrEmpty(review.ReplyText))
                            {
                                <div class="reply">
                                    <div class="reply-header">
                                        @T("Reviews.Reply")
                                    </div>
                                    <div class="reply-text">
                                        @Html.Raw(Nop.Core.Html.HtmlHelper.FormatText(review.ReplyText, false, true, false, false, false, false))
                                    </div>
                                </div>
                            }
                        </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductReviewsPageBottom, additionalData = Model })
    </div>
</div>
