@model CheckoutCompletedModel
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(T("PageTitle.Checkout").Text);
    //page class
    Html.AppendPageCssClassParts("html-checkout-page");
    Html.AppendPageCssClassParts("html-order-completed-page");
}
<div class="page checkout-page order-completed-page">
    @if (!Model.OnePageCheckoutEnabled)
    {
        @await Component.InvokeAsync("CheckoutProgress",  new { step = CheckoutProgressStep.Complete })
    }
    <div class="page-title">
        <h1>@T("Checkout.ThankYou")</h1>
    </div>
    <div class="page-body checkout-data">
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.CheckoutCompletedTop, additionalData = Model })
        <div class="section order-completed row">
            <div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12"> 
                <div class="title">
                    <strong>@T("Checkout.YourOrderHasBeenSuccessfullyProcessed")</strong>
                </div>
                <div class="details">
                    <div class="order-number">
                        <strong>@T("Checkout.OrderNumber"): @Model.CustomOrderNumber</strong>
                    </div>
                    <div class="details-link">
                        <a href="@Url.RouteUrl("OrderDetails", new { orderID = Model.OrderId })">@T("Checkout.PlacedOrderDetails")</a>
                    </div>
                </div>
                <div class="buttons">
                    <button type="button" class="button-2 btn btn-primary order-completed-continue-button" onclick="setLocation('@Url.RouteUrl("Homepage")')"> @T("Checkout.ThankYou.Continue")</button>
                </div>
            </div>
        </div>
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.CheckoutCompletedBottom, additionalData = Model })
    </div>
</div>
